- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Launch an EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: presentation
        vpc_subnet_id: subnet-08f2f636
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY') }}"
        aws_secret_key: "{{ lookup('env','AWS_SECRET_KEY') }}"
        security_token: "{{ lookup('env','AWS_SESSION_TOKEN') }}"
      register: ec2

    - name: Add instance hostname to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ ec2.instances }}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ ec2.instances }}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes

    - service:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Get project files from Git
      git:
        repo: 'https://github.com/SaraFilipkova/4IT572_docker.git'
        dest: ./app

    - name: Build Dockerized e-shop
      shell: cd ./app && docker build -t eshop:latest .
      become: yes

    - name: Run Dockerized e-shop
      shell: docker run -p 80:3000 eshop:latest
      async: 90
      poll: 0
      become: yes

    - wait_for: port=80
